{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Common\\\\leifs\\\\src\\\\Storage\\\\FoodContext.js\",\n    _s2 = $RefreshSig$();\n\nimport react from \"react\";\nimport { usePostFB } from \"../Meta/use-fetch\";\nimport images from \"./FoodImages/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DB_URL = \"https://react-s16-http-request-default-rtdb.asia-southeast1.firebasedatabase.app/leifs-food.json\";\nconst FoodContext = /*#__PURE__*/react.createContext({\n  FoodData: []\n});\nconst FoodData = {\n  \"1001\": {\n    row: 0,\n    name: \"Devil Fried Chicken\",\n    price: 5.99,\n    description: \"Taste the individual Devil Fried Chicken\",\n    img: images[\"1001\"]\n  },\n  \"1002\": {\n    row: 0,\n    name: \"Angel Milkshake\",\n    price: 5.49,\n    description: \"As smooth as the angel's skin!\",\n    img: images[\"1002\"]\n  },\n  \"1003\": {\n    row: 0,\n    name: \"Devil-Angel Combo\",\n    price: 5.49,\n    description: \"A duet from hell and heaven\",\n    img: images[\"1002\"]\n  },\n  \"2001\": {\n    row: 1,\n    name: \"Original Fried chicken\",\n    price: 5.49,\n    description: \"Originals never boring\",\n    img: images[\"1002\"]\n  },\n  \"2002\": {\n    row: 1,\n    name: \"Original Coca-cola\",\n    price: 5.49,\n    description: \"\",\n    img: images[\"1002\"]\n  },\n  \"3001\": {\n    row: 2,\n    name: \"Boba Milk Tea\",\n    price: 5.49,\n    description: \"Milk tea with boba, mmm yummy\",\n    img: images[\"1002\"]\n  },\n  \"3002\": {\n    row: 2,\n    name: \"Corn Chips\",\n    price: 5.49,\n    description: \"Triagles \",\n    img: images[\"1002\"]\n  },\n  \"3003\": {\n    row: 2,\n    name: \"Angel Milkshake\",\n    price: 5.49,\n    description: \"As smooth as the angel's skin!\",\n    img: images[\"1002\"]\n  },\n  //Method to filter the object by its row\n  filterByRow: function (selectedRow) {\n    let filtered = {};\n\n    for (const key in this) {\n      if (this[key].row === selectedRow) {\n        filtered[key] = this[key];\n      }\n    }\n\n    return filtered;\n  }\n};\nexport const FoodContextProvider = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(() => {\n    _s();\n\n    const [posttFood] = usePostFB(DB_URL);\n    const tobePostedFood = [];\n\n    for (let key in FoodData) {\n      tobePostedFood.push({\n        id: key,\n        row: FoodData[key].row,\n        name: FoodData[key].name,\n        price: FoodData[key].price,\n        description: FoodData[key].description,\n        img: FoodData[key].img\n      });\n    }\n\n    posttFood(tobePostedFood);\n  }, \"2mvjTNbkdXgJqJdiL6pgsOmAreY=\", false, function () {\n    return [usePostFB];\n  }));\n  return /*#__PURE__*/_jsxDEV(FoodContext.Provider, {\n    value: {\n      FoodData: FoodData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(FoodContextProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FoodContextProvider;\nexport default FoodContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodContextProvider\");","map":{"version":3,"sources":["D:/Projects/Common/leifs/src/Storage/FoodContext.js"],"names":["react","usePostFB","images","DB_URL","FoodContext","createContext","FoodData","row","name","price","description","img","filterByRow","selectedRow","filtered","key","FoodContextProvider","props","useEffect","posttFood","tobePostedFood","push","id","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAG,kGAAf;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACtCC,EAAAA,QAAQ,EAAE;AAD4B,CAApB,CAApB;AAIA,MAAMA,QAAQ,GAAG;AACf,UAAS;AACPC,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,qBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,0CAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GADM;AAQf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,iBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,gCAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GARM;AAef,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,mBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,6BAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GAfM;AAsBf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,wBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,wBAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GAtBM;AA6Bf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,oBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,EAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GA7BM;AAoCf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,+BAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GApCM;AA2Cf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,YAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,WAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GA3CM;AAkDf,UAAS;AACPK,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,IAAI,EAAE,iBAFC;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE,gCAJN;AAKPC,IAAAA,GAAG,EAAET,MAAM,CAAC,MAAD;AALJ,GAlDM;AA2Df;AACAU,EAAAA,WAAW,EAAG,UAASC,WAAT,EAAsB;AAClC,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,MAAMC,GAAX,IAAkB,IAAlB,EAAwB;AACtB,UAAI,KAAKA,GAAL,EAAUR,GAAV,KAAkBM,WAAtB,EAAmC;AACjCC,QAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgB,KAAKA,GAAL,CAAhB;AACD;AACF;;AACD,WAAOD,QAAP;AACD;AApEc,CAAjB;AAwEA,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC5CC,EAAAA,SAAS,IAAC,MAAK;AAAA;;AAAC,UAAM,CAACC,SAAD,IAAclB,SAAS,CAACE,MAAD,CAA7B;AAChB,UAAMiB,cAAc,GAAG,EAAvB;;AAEA,SAAK,IAAIL,GAAT,IAAgBT,QAAhB,EAA0B;AACxBc,MAAAA,cAAc,CAACC,IAAf,CACE;AACEC,QAAAA,EAAE,EAAGP,GADP;AAEER,QAAAA,GAAG,EAAGD,QAAQ,CAACS,GAAD,CAAR,CAAcR,GAFtB;AAGEC,QAAAA,IAAI,EAAGF,QAAQ,CAACS,GAAD,CAAR,CAAcP,IAHvB;AAIEC,QAAAA,KAAK,EAAGH,QAAQ,CAACS,GAAD,CAAR,CAAcN,KAJxB;AAKEC,QAAAA,WAAW,EAAGJ,QAAQ,CAACS,GAAD,CAAR,CAAcL,WAL9B;AAMEC,QAAAA,GAAG,EAAGL,QAAQ,CAACS,GAAD,CAAR,CAAcJ;AANtB,OADF;AAUD;;AAEDQ,IAAAA,SAAS,CAACC,cAAD,CAAT;AACD,GAjBU;AAAA,YAA2BnB,SAA3B;AAAA,KAAT;AAmBA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAClCK,MAAAA,QAAQ,EAAEA;AADwB,KAA7B;AAAA,cAEHW,KAAK,CAACM;AAFH;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAvBM;;IAAMP,mB;;KAAAA,mB;AAyBb,eAAeZ,WAAf","sourcesContent":["import react from \"react\";\r\nimport { usePostFB } from \"../Meta/use-fetch\";\r\nimport images from \"./FoodImages/index\"\r\n\r\nconst DB_URL = \"https://react-s16-http-request-default-rtdb.asia-southeast1.firebasedatabase.app/leifs-food.json\"\r\nconst FoodContext = react.createContext({\r\n  FoodData: [],\r\n});\r\n\r\nconst FoodData = {\r\n  \"1001\" : {\r\n    row: 0,\r\n    name: \"Devil Fried Chicken\",\r\n    price: 5.99,\r\n    description: \"Taste the individual Devil Fried Chicken\",\r\n    img: images[\"1001\"]\r\n  },\r\n  \"1002\" : {\r\n    row: 0,\r\n    name: \"Angel Milkshake\",\r\n    price: 5.49,\r\n    description: \"As smooth as the angel's skin!\",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"1003\" : {\r\n    row: 0,\r\n    name: \"Devil-Angel Combo\",\r\n    price: 5.49,\r\n    description: \"A duet from hell and heaven\",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"2001\" : {\r\n    row: 1,\r\n    name: \"Original Fried chicken\",\r\n    price: 5.49,\r\n    description: \"Originals never boring\",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"2002\" : {\r\n    row: 1,\r\n    name: \"Original Coca-cola\",\r\n    price: 5.49,\r\n    description: \"\",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"3001\" : {\r\n    row: 2,\r\n    name: \"Boba Milk Tea\",\r\n    price: 5.49,\r\n    description: \"Milk tea with boba, mmm yummy\",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"3002\" : {\r\n    row: 2,\r\n    name: \"Corn Chips\",\r\n    price: 5.49,\r\n    description: \"Triagles \",\r\n    img: images[\"1002\"]\r\n  },\r\n  \"3003\" : {\r\n    row: 2,\r\n    name: \"Angel Milkshake\",\r\n    price: 5.49,\r\n    description: \"As smooth as the angel's skin!\",\r\n    img: images[\"1002\"]\r\n  },\r\n\r\n\r\n  //Method to filter the object by its row\r\n  filterByRow : function(selectedRow) {\r\n    let filtered = {}\r\n    for (const key in this) {\r\n      if (this[key].row === selectedRow) {\r\n        filtered[key] = this[key]\r\n      }\r\n    }\r\n    return filtered\r\n  } \r\n}\r\n\r\n\r\nexport const FoodContextProvider = (props) => {\r\n  useEffect(()=> {const [posttFood] = usePostFB(DB_URL)\r\n  const tobePostedFood = []\r\n\r\n  for (let key in FoodData) {\r\n    tobePostedFood.push (\r\n      {\r\n        id : key,\r\n        row : FoodData[key].row,\r\n        name : FoodData[key].name,\r\n        price : FoodData[key].price,\r\n        description : FoodData[key].description,\r\n        img : FoodData[key].img\r\n      }\r\n    )\r\n  }\r\n\r\n  posttFood(tobePostedFood)\r\n})\r\n\r\n  return <FoodContext.Provider value={{\r\n    FoodData: FoodData,\r\n  }}>{props.children}</FoodContext.Provider>;\r\n};\r\n\r\nexport default FoodContext;\r\n"]},"metadata":{},"sourceType":"module"}