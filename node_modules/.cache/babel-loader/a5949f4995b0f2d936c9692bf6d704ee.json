{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ambisqu\\\\React_Course\\\\Projects\\\\project_2_leifs\\\\src\\\\Contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/react.createContext(AuthContextZero);\n_c = AuthContext;\nexport const AuthContextProvider = props => {\n  _s();\n\n  useEffect(() => {\n    const AuthContextZero = {\n      isLoggedIn: true,\n      username: \"\",\n      onLogin: () => {},\n      onLogout: () => {}\n    };\n  });\n  const [authInfo, setAuthInfo] = useState(AuthContextZero);\n\n  const onLoginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", true);\n    setAuthInfo(prevState => {\n      console.log(prevState);\n      return { ...prevState,\n        isLoggedIn: true\n      };\n    });\n    console.log(authInfo);\n  };\n\n  const onLogoutHandler = () => {\n    console.log(\"lol u nub\");\n    localStorage.setItem(\"isLoggedIn\", false);\n    localStorage.setItem(\"username\", \"\");\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        isLoggedIn: false\n      };\n    });\n  };\n\n  useEffect(() => {\n    setAuthInfo({\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\n      username: localStorage.getItem(\"username\"),\n      onLogin: onLoginHandler,\n      onLogout: onLogoutHandler\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authInfo,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Yu+JbiaYj8QgWBd54jjbdxoKuCA=\");\n\n_c2 = AuthContextProvider;\nexport default AuthContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Ambisqu/React_Course/Projects/project_2_leifs/src/Contexts/AuthContext.js"],"names":["react","useEffect","useState","AuthContext","createContext","AuthContextZero","AuthContextProvider","props","isLoggedIn","username","onLogin","onLogout","authInfo","setAuthInfo","onLoginHandler","localStorage","setItem","prevState","console","log","onLogoutHandler","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAIA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoBC,eAApB,CAApB;KAAMF,W;AAEN,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5CN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,eAAe,GAAG;AACtBG,MAAAA,UAAU,EAAE,IADU;AAEtBC,MAAAA,QAAQ,EAAE,EAFY;AAGtBC,MAAAA,OAAO,EAAE,MAAM,CAAE,CAHK;AAItBC,MAAAA,QAAQ,EAAE,MAAM,CAAE;AAJI,KAAxB;AAMD,GAPQ,CAAT;AAUA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,eAAD,CAAxC;;AAEA,QAAMS,cAAc,GAAG,MAAM;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAO,EACL,GAAGA,SADE;AAELT,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KANU,CAAX;AAOAU,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,GAVD;;AAYA,QAAMQ,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzB,aAAO,EACL,GAAGA,SADE;AAELT,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KALU,CAAX;AAMD,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAAC;AACVL,MAAAA,UAAU,EAAEO,YAAY,CAACM,OAAb,CAAqB,WAArB,CADF;AAEVZ,MAAAA,QAAQ,EAAEM,YAAY,CAACM,OAAb,CAAqB,UAArB,CAFA;AAIVX,MAAAA,OAAO,EAAEI,cAJC;AAKVH,MAAAA,QAAQ,EAAES;AALA,KAAD,CAAX;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAER,QAA7B;AAAA,cACGL,KAAK,CAACe;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApDM;;GAAMhB,mB;;MAAAA,mB;AAsDb,eAAeH,WAAf","sourcesContent":["import react from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst AuthContext = react.createContext(AuthContextZero);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  useEffect(() => {\r\n    const AuthContextZero = {\r\n      isLoggedIn: true,\r\n      username: \"\",\r\n      onLogin: () => {},\r\n      onLogout: () => {},\r\n    };\r\n  })\r\n\r\n\r\n  const [authInfo, setAuthInfo] = useState(AuthContextZero);\r\n\r\n  const onLoginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", true);\r\n    setAuthInfo((prevState) => {\r\n      console.log(prevState)\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: true,\r\n      };\r\n    });\r\n    console.log(authInfo)\r\n  };\r\n\r\n  const onLogoutHandler = () => {\r\n    console.log(\"lol u nub\")\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    localStorage.setItem(\"username\", \"\");\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuthInfo({\r\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\r\n      username: localStorage.getItem(\"username\"),\r\n      \r\n      onLogin: onLoginHandler,\r\n      onLogout: onLogoutHandler,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={authInfo}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}