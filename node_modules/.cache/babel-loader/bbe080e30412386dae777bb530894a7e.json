{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Common\\\\leifs\\\\src\\\\Storage\\\\FoodContext.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport { usePostFB } from \"../Meta/use-fetch\";\nimport images from \"./FoodImages/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DB_URL = \"https://react-s16-http-request-default-rtdb.asia-southeast1.firebasedatabase.app/leifs-food.json\";\nconst FoodContext = /*#__PURE__*/react.createContext({\n  FoodData: []\n});\nconst FoodData = {\n  1001: {\n    row: 0,\n    name: \"Devil Fried Chicken\",\n    price: 5.99,\n    description: \"Taste the individual Devil Fried Chicken\",\n    img: images[\"1001\"]\n  },\n  1002: {\n    row: 0,\n    name: \"Angel Milkshake\",\n    price: 5.49,\n    description: \"As smooth as the angel's skin!\",\n    img: images[\"1002\"]\n  },\n  1003: {\n    row: 0,\n    name: \"Devil-Angel Combo\",\n    price: 5.49,\n    description: \"A duet from hell and heaven\",\n    img: images[\"1002\"]\n  },\n  2001: {\n    row: 1,\n    name: \"Original Fried chicken\",\n    price: 5.49,\n    description: \"Originals never boring\",\n    img: images[\"1002\"]\n  },\n  2002: {\n    row: 1,\n    name: \"Original Coca-cola\",\n    price: 5.49,\n    description: \"\",\n    img: images[\"1002\"]\n  },\n  3001: {\n    row: 2,\n    name: \"Boba Milk Tea\",\n    price: 5.49,\n    description: \"Milk tea with boba, mmm yummy\",\n    img: images[\"1002\"]\n  },\n  3002: {\n    row: 2,\n    name: \"Corn Chips\",\n    price: 5.49,\n    description: \"Triagles \",\n    img: images[\"1002\"]\n  },\n  3003: {\n    row: 2,\n    name: \"Angel Milkshake\",\n    price: 5.49,\n    description: \"As smooth as the angel's skin!\",\n    img: images[\"1002\"]\n  },\n  //Method to filter the object by its row\n  filterByRow: function (selectedRow) {\n    let filtered = {};\n\n    for (const key in this) {\n      if (this[key].row === selectedRow) {\n        filtered[key] = this[key];\n      }\n    }\n\n    return filtered;\n  }\n};\nexport const FoodContextProvider = props => {\n  _s();\n\n  const [posttFood] = usePostFB(DB_URL);\n  useEffect(() => {\n    const tobePostedFood = [];\n\n    for (let key in FoodData) {\n      tobePostedFood.push({\n        id: key,\n        row: FoodData[key].row,\n        name: FoodData[key].name,\n        price: FoodData[key].price,\n        description: FoodData[key].description,\n        img: FoodData[key].img\n      });\n    }\n\n    posttFood(tobePostedFood);\n  });\n  return /*#__PURE__*/_jsxDEV(FoodContext.Provider, {\n    value: {\n      FoodData: FoodData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodContextProvider, \"2aGlovMCFE1SR/OZg06kjO5IvyY=\", false, function () {\n  return [usePostFB];\n});\n\n_c = FoodContextProvider;\nexport default FoodContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodContextProvider\");","map":{"version":3,"sources":["D:/Projects/Common/leifs/src/Storage/FoodContext.js"],"names":["react","usePostFB","images","DB_URL","FoodContext","createContext","FoodData","row","name","price","description","img","filterByRow","selectedRow","filtered","key","FoodContextProvider","props","posttFood","useEffect","tobePostedFood","push","id","children"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport { usePostFB } from \"../Meta/use-fetch\";\r\nimport images from \"./FoodImages/index\";\r\n\r\nconst DB_URL =\r\n  \"https://react-s16-http-request-default-rtdb.asia-southeast1.firebasedatabase.app/leifs-food.json\";\r\nconst FoodContext = react.createContext({\r\n  FoodData: [],\r\n});\r\n\r\nconst FoodData = {\r\n  1001: {\r\n    row: 0,\r\n    name: \"Devil Fried Chicken\",\r\n    price: 5.99,\r\n    description: \"Taste the individual Devil Fried Chicken\",\r\n    img: images[\"1001\"],\r\n  },\r\n  1002: {\r\n    row: 0,\r\n    name: \"Angel Milkshake\",\r\n    price: 5.49,\r\n    description: \"As smooth as the angel's skin!\",\r\n    img: images[\"1002\"],\r\n  },\r\n  1003: {\r\n    row: 0,\r\n    name: \"Devil-Angel Combo\",\r\n    price: 5.49,\r\n    description: \"A duet from hell and heaven\",\r\n    img: images[\"1002\"],\r\n  },\r\n  2001: {\r\n    row: 1,\r\n    name: \"Original Fried chicken\",\r\n    price: 5.49,\r\n    description: \"Originals never boring\",\r\n    img: images[\"1002\"],\r\n  },\r\n  2002: {\r\n    row: 1,\r\n    name: \"Original Coca-cola\",\r\n    price: 5.49,\r\n    description: \"\",\r\n    img: images[\"1002\"],\r\n  },\r\n  3001: {\r\n    row: 2,\r\n    name: \"Boba Milk Tea\",\r\n    price: 5.49,\r\n    description: \"Milk tea with boba, mmm yummy\",\r\n    img: images[\"1002\"],\r\n  },\r\n  3002: {\r\n    row: 2,\r\n    name: \"Corn Chips\",\r\n    price: 5.49,\r\n    description: \"Triagles \",\r\n    img: images[\"1002\"],\r\n  },\r\n  3003: {\r\n    row: 2,\r\n    name: \"Angel Milkshake\",\r\n    price: 5.49,\r\n    description: \"As smooth as the angel's skin!\",\r\n    img: images[\"1002\"],\r\n  },\r\n\r\n  //Method to filter the object by its row\r\n  filterByRow: function (selectedRow) {\r\n    let filtered = {};\r\n    for (const key in this) {\r\n      if (this[key].row === selectedRow) {\r\n        filtered[key] = this[key];\r\n      }\r\n    }\r\n    return filtered;\r\n  },\r\n};\r\n\r\nexport const FoodContextProvider = (props) => {\r\n  const [posttFood] = usePostFB(DB_URL);\r\n  useEffect(() => {\r\n    \r\n    const tobePostedFood = [];\r\n\r\n    for (let key in FoodData) {\r\n      tobePostedFood.push({\r\n        id: key,\r\n        row: FoodData[key].row,\r\n        name: FoodData[key].name,\r\n        price: FoodData[key].price,\r\n        description: FoodData[key].description,\r\n        img: FoodData[key].img,\r\n      });\r\n    }\r\n\r\n    posttFood(tobePostedFood);\r\n  });\r\n\r\n  return (\r\n    <FoodContext.Provider\r\n      value={{\r\n        FoodData: FoodData,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FoodContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FoodContext;\r\n"]},"metadata":{},"sourceType":"module"}