{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ambisqu\\\\React_Course\\\\Projects\\\\project_2_leifs\\\\src\\\\Contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContextZero = {\n  isLoggedIn: false,\n  username: \"\",\n  onLogin: () => {},\n  onLogout: () => {}\n};\nconst AuthContext = /*#__PURE__*/react.createContext(AuthContextZero);\n_c = AuthContext;\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [authInfo, setAuthInfo] = useState(AuthContextZero);\n\n  const onLoginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", true);\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        isLoggedIn: true\n      };\n    });\n    console.log(authInfo);\n  };\n\n  const onLogoutHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", false);\n    localStorage.setItem(\"username\", \"\");\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        isLoggedIn: false\n      };\n    });\n  };\n\n  useEffect(() => {\n    setAuthInfo({\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\n      username: localStorage.getItem(\"username\"),\n      onLogin: onLoginHandler,\n      onLogout: onLogoutHandler\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authInfo,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Yyil5AAi/2NziJMkqDKFavuA84c=\");\n\n_c2 = AuthContextProvider;\nexport default AuthContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Ambisqu/React_Course/Projects/project_2_leifs/src/Contexts/AuthContext.js"],"names":["react","useEffect","useState","AuthContextZero","isLoggedIn","username","onLogin","onLogout","AuthContext","createContext","AuthContextProvider","props","authInfo","setAuthInfo","onLoginHandler","localStorage","setItem","prevState","console","log","onLogoutHandler","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE,KADU;AAEtBC,EAAAA,QAAQ,EAAE,EAFY;AAGtBC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAHK;AAItBC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAJI,CAAxB;AAOA,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAN,CAAoBN,eAApB,CAApB;KAAMK,W;AAEN,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACC,eAAD,CAAxC;;AAEA,QAAMW,cAAc,GAAG,MAAM;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzB,aAAO,EACL,GAAGA,SADE;AAELb,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KALU,CAAX;AAMAc,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,GATD;;AAWA,QAAMQ,eAAe,GAAG,MAAM;AAC5BL,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzB,aAAO,EACL,GAAGA,SADE;AAELb,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KALU,CAAX;AAMD,GATD;;AAWAH,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAAC;AACVT,MAAAA,UAAU,EAAEW,YAAY,CAACM,OAAb,CAAqB,WAArB,CADF;AAEVhB,MAAAA,QAAQ,EAAEU,YAAY,CAACM,OAAb,CAAqB,UAArB,CAFA;AAIVf,MAAAA,OAAO,EAAEQ,cAJC;AAKVP,MAAAA,QAAQ,EAAEa;AALA,KAAD,CAAX;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAER,QAA7B;AAAA,cACGD,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCM;;GAAMZ,mB;;MAAAA,mB;AA0Cb,eAAeF,WAAf","sourcesContent":["import react from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AuthContextZero = {\r\n  isLoggedIn: false,\r\n  username: \"\",\r\n  onLogin: () => {},\r\n  onLogout: () => {},\r\n};\r\n\r\nconst AuthContext = react.createContext(AuthContextZero);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [authInfo, setAuthInfo] = useState(AuthContextZero);\r\n\r\n  const onLoginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", true);\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: true,\r\n      };\r\n    });\r\n    console.log(authInfo)\r\n  };\r\n\r\n  const onLogoutHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    localStorage.setItem(\"username\", \"\");\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuthInfo({\r\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\r\n      username: localStorage.getItem(\"username\"),\r\n      \r\n      onLogin: onLoginHandler,\r\n      onLogout: onLogoutHandler,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={authInfo}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}