{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ambisqu\\\\React_Course\\\\Projects\\\\project_2_leifs\\\\src\\\\Contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/react.createContext({\n  isLoggedIn: false,\n  username: \"\",\n  validation: \"100\",\n  onLogin: () => {},\n  onLogout: () => {},\n  onSignup: () => {},\n  triggerValidation: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [authInfo, setAuthInfo] = useState({\n    isLoggedIn: true,\n    username: \"\"\n  });\n  let userList = JSON.parse(localStorage.getItem(\"userList\"));\n  userList = userList === null ? [{\n    username: \"admin\",\n    password: \"alipganteng\"\n  }] : [...userList, {\n    username: \"admin\",\n    password: \"alipganteng\"\n  }];\n\n  const onLoginHandler = (username, password) => {\n    for (let user in userList) {\n      if (user.username === username) {\n        if (user.password === password) {\n          localStorage.setItem(\"isLoggedIn\", true);\n          setAuthInfo(prevState => {\n            console.log(prevState);\n            return { ...prevState,\n              isLoggedIn: true\n            };\n          });\n          return;\n        } else {\n          setAuthInfo(prevState => {\n            return { ...prevState,\n              validation: \"102\"\n            };\n          });\n        }\n      }\n    }\n\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        validation: \"101\"\n      };\n    });\n  };\n\n  const onLogoutHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", false);\n    localStorage.setItem(\"username\", \"\");\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        isLoggedIn: false\n      };\n    });\n  };\n\n  const triggerValidation = code => {\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        validation: code\n      };\n    });\n  };\n\n  const signupHandler = (username, password) => {\n    const newUserList = [...userList, {\n      username: username,\n      password: password\n    }];\n    localStorage.setItem(JSON.stringify(newUserList));\n  };\n\n  useEffect(() => {\n    setAuthInfo({\n      isLoggedIn: localStorage.getItem(\"isLoggedin\"),\n      username: localStorage.getItem(\"username\")\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...authInfo,\n      onLogin: (username, password) => {\n        onLoginHandler(username, password);\n      },\n      onLogout: onLogoutHandler,\n      onSignup: (username, password) => {\n        signupHandler(username, password);\n      },\n      triggerValidation: triggerValidation\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"q1peRsR3Ebr89T9ETwsYO4wvs3o=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Ambisqu/React_Course/Projects/project_2_leifs/src/Contexts/AuthContext.js"],"names":["react","useEffect","useState","AuthContext","createContext","isLoggedIn","username","validation","onLogin","onLogout","onSignup","triggerValidation","AuthContextProvider","props","authInfo","setAuthInfo","userList","JSON","parse","localStorage","getItem","password","onLoginHandler","user","setItem","prevState","console","log","onLogoutHandler","code","signupHandler","newUserList","stringify","children"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AuthContext = react.createContext({\r\n  isLoggedIn: false,\r\n  username: \"\",\r\n  validation: \"100\",\r\n  onLogin: () => {},\r\n  onLogout: () => {},\r\n  onSignup: () => {},\r\n  triggerValidation: () => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [authInfo, setAuthInfo] = useState({\r\n    isLoggedIn: true,\r\n    username: \"\",\r\n  });\r\n\r\n  let userList = JSON.parse(localStorage.getItem(\"userList\"));\r\n  userList = userList === null ? [{username:\"admin\",password:\"alipganteng\"}]: [...userList,{username:\"admin\",password:\"alipganteng\"}]\r\n\r\n\r\n  const onLoginHandler = (username, password) => {\r\n    for (let user in userList) {\r\n      if (user.username === username) {\r\n        if (user.password === password) {\r\n          localStorage.setItem(\"isLoggedIn\", true);\r\n          setAuthInfo((prevState) => {\r\n            console.log(prevState);\r\n            return {\r\n              ...prevState,\r\n              isLoggedIn: true,\r\n            };\r\n          });\r\n          return;\r\n        } else {\r\n          setAuthInfo((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              validation: \"102\",\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        validation: \"101\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const onLogoutHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    localStorage.setItem(\"username\", \"\");\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const triggerValidation = (code) => {\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        validation: code\r\n      }\r\n    })\r\n  }\r\n\r\n  const signupHandler = (username, password) => {\r\n    const newUserList = [\r\n      ...userList,\r\n      { username: username, password: password },\r\n    ];\r\n    localStorage.setItem(JSON.stringify(newUserList));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuthInfo({\r\n      isLoggedIn: localStorage.getItem(\"isLoggedin\"),\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...authInfo,\r\n        onLogin: (username, password) => {\r\n          onLoginHandler(username, password);\r\n        },\r\n        onLogout: onLogoutHandler,\r\n        onSignup: (username, password) => {\r\n          signupHandler(username, password);\r\n        },\r\n        triggerValidation: triggerValidation\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}