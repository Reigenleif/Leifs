{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ambisqu\\\\React_Course\\\\Projects\\\\project_2_leifs\\\\src\\\\Contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/react.createContext({\n  isLoggedIn: true,\n  username: \"\",\n  onLogin: () => {},\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [authInfo, setAuthInfo] = useState({\n    isLoggedIn: true,\n    username: \"\",\n    onLogin: () => {},\n    onLogout: () => {}\n  });\n\n  const onLoginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", true);\n    setAuthInfo(prevState => {\n      console.log(prevState);\n      return { ...prevState,\n        isLoggedIn: true\n      };\n    });\n    console.log(authInfo);\n  };\n\n  const onLogoutHandler = () => {\n    console.log(\"lol u nub\");\n    localStorage.setItem(\"isLoggedIn\", false);\n    localStorage.setItem(\"username\", \"\");\n    setAuthInfo(prevState => {\n      return { ...prevState,\n        isLoggedIn: false\n      };\n    });\n  };\n\n  useEffect(() => {\n    setAuthInfo({\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\n      username: localStorage.getItem(\"username\"),\n      onLogin: onLoginHandler,\n      onLogout: onLogoutHandler\n    });\n  }, [onLoginHandler]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authInfo,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"5GPtfQoLPv2Rtt+MSKFKJtRackY=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Ambisqu/React_Course/Projects/project_2_leifs/src/Contexts/AuthContext.js"],"names":["react","useEffect","useState","AuthContext","createContext","isLoggedIn","username","onLogin","onLogout","AuthContextProvider","props","authInfo","setAuthInfo","onLoginHandler","localStorage","setItem","prevState","console","log","onLogoutHandler","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,IAD0B;AAEtCC,EAAAA,QAAQ,EAAE,EAF4B;AAGtCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAHqB;AAItCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCG,IAAAA,UAAU,EAAE,IAD2B;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAHsB;AAIvCC,IAAAA,QAAQ,EAAE,MAAM,CAAE;AAJqB,GAAD,CAAxC;;AASA,QAAMK,cAAc,GAAG,MAAM;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAO,EACL,GAAGA,SADE;AAELX,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KANU,CAAX;AAOAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,GAVD;;AAYA,QAAMQ,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAH,IAAAA,WAAW,CAAEI,SAAD,IAAe;AACzB,aAAO,EACL,GAAGA,SADE;AAELX,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID,KALU,CAAX;AAMD,GAVD;;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAC;AACVP,MAAAA,UAAU,EAAES,YAAY,CAACM,OAAb,CAAqB,WAArB,CADF;AAEVd,MAAAA,QAAQ,EAAEQ,YAAY,CAACM,OAAb,CAAqB,UAArB,CAFA;AAIVb,MAAAA,OAAO,EAAEM,cAJC;AAKVL,MAAAA,QAAQ,EAAEW;AALA,KAAD,CAAX;AAOD,GARQ,EAQP,CAACN,cAAD,CARO,CAAT;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEF,QAA7B;AAAA,cACGD,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjDM;;GAAMZ,mB;;KAAAA,mB;AAmDb,eAAeN,WAAf","sourcesContent":["import react from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AuthContext = react.createContext({\r\n  isLoggedIn: true,\r\n  username: \"\",\r\n  onLogin: () => {},\r\n  onLogout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [authInfo, setAuthInfo] = useState({\r\n    isLoggedIn: true,\r\n    username: \"\",\r\n    onLogin: () => {},\r\n    onLogout: () => {},\r\n  });\r\n\r\n  \r\n\r\n  const onLoginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", true);\r\n    setAuthInfo((prevState) => {\r\n      console.log(prevState)\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: true,\r\n      };\r\n    });\r\n    console.log(authInfo)\r\n  };\r\n\r\n  const onLogoutHandler = () => {\r\n    console.log(\"lol u nub\")\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    localStorage.setItem(\"username\", \"\");\r\n    setAuthInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoggedIn: false,\r\n      };\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setAuthInfo({\r\n      isLoggedIn: localStorage.getItem(\"isLoggedn\"),\r\n      username: localStorage.getItem(\"username\"),\r\n      \r\n      onLogin: onLoginHandler,\r\n      onLogout: onLogoutHandler,\r\n    });\r\n  },[onLoginHandler]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={authInfo}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}